// <auto-generated />
using System;
using ClubModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Week8ClassLibrary2023.DataLayer.Migrations
{
    [DbContext(typeof(ClubsContext))]
    [Migration("20231116124703_Club-Data-Added")]
    partial class ClubDataAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClubModels.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("date");

                    b.Property<int>("adminID")
                        .HasColumnType("int");

                    b.HasKey("ClubId");

                    b.ToTable("Club");

                    b.HasData(
                        new
                        {
                            ClubId = 1,
                            ClubName = "Basketball Club",
                            CreationDate = new DateTime(2023, 11, 16, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(4927),
                            adminID = 1
                        },
                        new
                        {
                            ClubId = 2,
                            ClubName = "Football Club",
                            CreationDate = new DateTime(2023, 11, 16, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(4944),
                            adminID = 2
                        },
                        new
                        {
                            ClubId = 3,
                            ClubName = "Boxing Club",
                            CreationDate = new DateTime(2023, 11, 16, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(4946),
                            adminID = 3
                        });
                });

            modelBuilder.Entity("ClubModels.ClubEvent", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("ClubId");

                    b.ToTable("ClubEvent");

                    b.HasData(
                        new
                        {
                            EventID = 1,
                            ClubId = 1,
                            EndDateTime = new DateTime(2023, 12, 16, 16, 47, 3, 579, DateTimeKind.Local).AddTicks(5118),
                            Location = "Tallaght, Dublin",
                            StartDateTime = new DateTime(2023, 12, 16, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5114),
                            Venue = "National Basketball Arena"
                        },
                        new
                        {
                            EventID = 2,
                            ClubId = 1,
                            EndDateTime = new DateTime(2023, 12, 31, 15, 47, 3, 579, DateTimeKind.Local).AddTicks(5123),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2023, 12, 31, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5122),
                            Venue = "Local Sports Hall"
                        },
                        new
                        {
                            EventID = 3,
                            ClubId = 1,
                            EndDateTime = new DateTime(2024, 1, 15, 14, 47, 3, 579, DateTimeKind.Local).AddTicks(5127),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 1, 15, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5125),
                            Venue = "Community Center"
                        },
                        new
                        {
                            EventID = 4,
                            ClubId = 1,
                            EndDateTime = new DateTime(2024, 1, 30, 15, 47, 3, 579, DateTimeKind.Local).AddTicks(5130),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 1, 30, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5129),
                            Venue = "University Sports Complex"
                        },
                        new
                        {
                            EventID = 5,
                            ClubId = 2,
                            EndDateTime = new DateTime(2023, 12, 16, 15, 47, 3, 579, DateTimeKind.Local).AddTicks(5133),
                            Location = "Ballsbridge, Dublin",
                            StartDateTime = new DateTime(2023, 12, 16, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5132),
                            Venue = "Aviva Stadium"
                        },
                        new
                        {
                            EventID = 6,
                            ClubId = 2,
                            EndDateTime = new DateTime(2024, 1, 5, 14, 47, 3, 579, DateTimeKind.Local).AddTicks(5136),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 1, 5, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5135),
                            Venue = "Local Football Field"
                        },
                        new
                        {
                            EventID = 7,
                            ClubId = 2,
                            EndDateTime = new DateTime(2024, 1, 25, 15, 47, 3, 579, DateTimeKind.Local).AddTicks(5140),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 1, 25, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5138),
                            Venue = "High School Stadium"
                        },
                        new
                        {
                            EventID = 8,
                            ClubId = 2,
                            EndDateTime = new DateTime(2024, 2, 14, 14, 47, 3, 579, DateTimeKind.Local).AddTicks(5144),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 2, 14, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5143),
                            Venue = "City Park Arena"
                        },
                        new
                        {
                            EventID = 9,
                            ClubId = 3,
                            EndDateTime = new DateTime(2023, 12, 16, 14, 47, 3, 579, DateTimeKind.Local).AddTicks(5147),
                            Location = "South Circular Road, Dublin",
                            StartDateTime = new DateTime(2023, 12, 16, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5146),
                            Venue = "National Boxing Stadium"
                        },
                        new
                        {
                            EventID = 10,
                            ClubId = 3,
                            EndDateTime = new DateTime(2024, 1, 10, 15, 47, 3, 579, DateTimeKind.Local).AddTicks(5151),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 1, 10, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5149),
                            Venue = "Downtown Gym"
                        },
                        new
                        {
                            EventID = 11,
                            ClubId = 3,
                            EndDateTime = new DateTime(2024, 2, 4, 14, 47, 3, 579, DateTimeKind.Local).AddTicks(5154),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 2, 4, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5153),
                            Venue = "Local Fitness Center"
                        },
                        new
                        {
                            EventID = 12,
                            ClubId = 3,
                            EndDateTime = new DateTime(2024, 2, 29, 15, 47, 3, 579, DateTimeKind.Local).AddTicks(5157),
                            Location = "Dublin",
                            StartDateTime = new DateTime(2024, 2, 29, 12, 47, 3, 579, DateTimeKind.Local).AddTicks(5156),
                            Venue = "University Sports Hall"
                        });
                });

            modelBuilder.Entity("ClubModels.ClubEvent", b =>
                {
                    b.HasOne("ClubModels.Club", "associatedClub")
                        .WithMany("clubEvents")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("associatedClub");
                });

            modelBuilder.Entity("ClubModels.Club", b =>
                {
                    b.Navigation("clubEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
