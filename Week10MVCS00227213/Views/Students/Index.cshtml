@using DataModel;
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@model IPagedList<Student>

@{
    ViewData["Title"] = "Student List";
}

<h2>Index</h2>

@using (Html.BeginForm("Index", "Students", FormMethod.Get, new { @class = "form-inline" }))
{
    <p>
        Find by name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control" })
        <input type="submit" value="Search" class="btn btn-primary" />
        <a asp-action="Index" asp-controller="Students" class="btn btn-secondary">Reset</a>
    </p>
}

<p>
    <a asp-action="Create" asp-controller="Students" class="btn btn-success">Create New</a>
</p>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Second Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>
                    @Html.ActionLink("Registration Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
                </th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                    <td>@Html.DisplayFor(modelItem => item.SecondName)</td>
                    <td>@Html.DisplayFor(modelItem => item.RegistrationDate)</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.StudentID" class="btn btn-primary btn-sm">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.StudentID" class="btn btn-info btn-sm">Details</a>
                        <a asp-action="Delete" asp-route-id="@item.StudentID" class="btn btn-danger btn-sm">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="text-center">
        <div class="page-count">
            Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
        </div>
        <div class="pagination">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, searchString = ViewBag.CurrentSearch }))
        </div>
    </div>
}
else
{
    <p>No students found.</p>
}
