// <auto-generated />
using System;
using ClubModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Week9.Data.ClassLib.Migrations
{
    [DbContext(typeof(Week9DbContext))]
    [Migration("20231122183324_Data-Seeding")]
    partial class DataSeeding
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClubModels.Club", b =>
                {
                    b.Property<int>("ClubId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClubId"));

                    b.Property<string>("ClubName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("date");

                    b.Property<int>("adminID")
                        .HasColumnType("int");

                    b.HasKey("ClubId");

                    b.ToTable("Club");

                    b.HasData(
                        new
                        {
                            ClubId = 1,
                            ClubName = "Chess Club",
                            CreationDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            adminID = 100
                        },
                        new
                        {
                            ClubId = 2,
                            ClubName = "Book Club",
                            CreationDate = new DateTime(2022, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            adminID = 101
                        },
                        new
                        {
                            ClubId = 3,
                            ClubName = "Coding Club",
                            CreationDate = new DateTime(2022, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            adminID = 102
                        });
                });

            modelBuilder.Entity("ClubModels.ClubEvent", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventID"));

                    b.Property<int>("ClubId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Venue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventID");

                    b.HasIndex("ClubId");

                    b.ToTable("ClubEvent");

                    b.HasData(
                        new
                        {
                            EventID = 1,
                            ClubId = 1,
                            EndDateTime = new DateTime(2022, 4, 1, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Room 101",
                            StartDateTime = new DateTime(2022, 4, 1, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Venue = "Library"
                        },
                        new
                        {
                            EventID = 2,
                            ClubId = 2,
                            EndDateTime = new DateTime(2022, 5, 1, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Main Hall",
                            StartDateTime = new DateTime(2022, 5, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Venue = "Community Hall"
                        },
                        new
                        {
                            EventID = 3,
                            ClubId = 3,
                            EndDateTime = new DateTime(2022, 6, 1, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "Lab A",
                            StartDateTime = new DateTime(2022, 6, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Venue = "Tech Center"
                        });
                });

            modelBuilder.Entity("ClubModels.ClubEvent", b =>
                {
                    b.HasOne("ClubModels.Club", "associatedClub")
                        .WithMany("clubEvents")
                        .HasForeignKey("ClubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("associatedClub");
                });

            modelBuilder.Entity("ClubModels.Club", b =>
                {
                    b.Navigation("clubEvents");
                });
#pragma warning restore 612, 618
        }
    }
}
