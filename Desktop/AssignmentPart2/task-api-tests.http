### 1. POST request with correct data.
POST http://localhost:5000/tasks HTTP/1.1
Content-Type: application/json

{
    "title": "Sample Task",
    "dueDate": "01-11-2023",
    "priority": "High",
    "status": "Pending"
}


### 2. POST request which fails validation.
POST http://localhost:5000/tasks HTTP/1.1
Content-Type: application/json

{
    "title": "",
    "description": "This task lacks a title",
    "dueDate": "02-11-2023",
    "priority": "Medium",
    "status": "Pending"
}
###

### 3. GET request on the set of resources.
GET http://localhost:5000/tasks HTTP/1.1
###

### 4. GET request on an individual resource which succeeds.
# Note: Replace with the specific ID of a task before executing.
GET http://localhost:5000/tasks/65357adb033531fc269ab6f7 HTTP/1.1
###

### 5. GET request on an individual resource which fails.
GET http://localhost:5000/tasks/nonexistentTaskId HTTP/1.1
###

### 6. DELETE request on an individual resource which succeeds.
# Note: Replace with the specific ID of a task you want to delete
DELETE http://localhost:5000/tasks/65357adb033531fc269ab6f7 HTTP/1.1

### 7. DELETE request on an individual resource which fails.
DELETE http://localhost:5000/tasks/nonexistentTaskId HTTP/1.1

### 8. PUT request on an individual resource which succeeds.
# Replace with the specific ID of a task you want to update
PUT http://localhost:5000/tasks/65357b1033531fc269ab6fc HTTP/1.1
Content-Type: application/json

{
    "title": "Updated Task",
    "description": "This task has been updated"
}



### 9. PUT request on an individual resource which fails as the resource cannot be found.
PUT http://localhost:5000/tasks/nonexistentTaskId HTTP/1.1
Content-Type: application/json

{
    "title": "This task doesn't exist"
}
###

### 10. PUT request on an individual resource which fails as the title is empty.
# Note: Replace with the specific ID of a task you want to update
PUT http://localhost:5000/tasks/65357b91033531fc269ab6fc HTTP/1.1
Content-Type: application/json

{
    "title": ""
}

